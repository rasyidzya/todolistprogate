{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","react_default","a","createElement","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","components_TodoForm","map","todo","index","isComplete","key","ket","onClick","index_esm","ti_index_esm","TodoList","setTodos","test","txt","newTodos","concat","toConsumableArray","components_Todo","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c0144a40.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState('');\r\n\r\nconst inputRef = useRef(null)\r\n\r\nuseEffect(() => {\r\n    inputRef.current.focus()\r\n})\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value)\r\n}\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 100000),\r\n        text: input\r\n    });\r\n\r\n    setInput('');\r\n\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n            <input type='text' placeholder='Add a todo' value={input}\r\n            name='text' className='todo-input' onChange={handleChange}\r\n            ref={inputRef} />\r\n            <button className='todo-button'>Add todo</button>\r\n        </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoForm","import React, {useState, useEffect, useRef} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' :\r\n    'todo-row'} key={index}>\r\n\r\n        <div ket={todo.id} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n            <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className='delete-icon'\r\n            />\r\n            <TiEdit\r\n            onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n            className='edit-icon'\r\n            />\r\n        </div>\r\n\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default Todo","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.txt)) {\r\n            return\r\n        }\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos);\r\n\r\n    };\r\n    const updateTodo = (todoId, newValue) => {\r\n\r\n        if(!newValue.text || /^\\s*$/.test(newValue.txt)) {\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n    \r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n   \r\n\r\n\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>What's the Plan for today?</h1>\r\n        <TodoForm onSubmit={addTodo} />\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}\r\n        updateTodo={updateTodo} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}